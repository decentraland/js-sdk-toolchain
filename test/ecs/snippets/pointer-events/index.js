"use strict";
function createCube(x, y, z, pointerEvents) {
    const meshEntity = engine.addEntity();
    Transform.create(meshEntity, { position: { x, y, z } });
    MeshRenderer.create(meshEntity, { mesh: { $case: 'box', box: { uvs: [] } } });
    MeshCollider.create(meshEntity, { mesh: { $case: 'box', box: {} } });
    PointerHoverFeedback.create(meshEntity, { pointerEvents });
    return meshEntity;
}
createCube(15, 1, 15, [
    {
        eventType: PointerEventType.PET_DOWN,
        eventInfo: {
            button: InputAction.IA_PRIMARY,
            hoverText: 'PrimaryDown',
            maxDistance: 5,
            showFeedback: true
        }
    }
]);
createCube(13, 1, 15, [
    {
        eventType: PointerEventType.PET_UP,
        eventInfo: {
            button: InputAction.IA_SECONDARY,
            hoverText: 'Secondary Up',
            maxDistance: 5,
            showFeedback: true
        }
    }
]);
createCube(11, 1, 15, [
    {
        eventType: PointerEventType.PET_HOVER_ENTER,
        eventInfo: {
            button: InputAction.IA_ANY,
            hoverText: 'Infinity Hover',
            maxDistance: 10000000,
            showFeedback: true
        }
    }
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsU0FBUyxVQUFVLENBQ2pCLENBQVMsRUFDVCxDQUFTLEVBQ1QsQ0FBUyxFQUNULGFBQTZDO0lBRTdDLE1BQU0sVUFBVSxHQUFHLE1BQU0sQ0FBQyxTQUFTLEVBQUUsQ0FBQTtJQUNyQyxTQUFTLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFBO0lBQ3ZELFlBQVksQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUE7SUFDN0UsWUFBWSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUE7SUFDcEUsb0JBQW9CLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxFQUFFLGFBQWEsRUFBRSxDQUFDLENBQUE7SUFDMUQsT0FBTyxVQUFVLENBQUE7QUFDbkIsQ0FBQztBQUVELFVBQVUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNwQjtRQUNFLFNBQVMsRUFBRSxnQkFBZ0IsQ0FBQyxRQUFRO1FBQ3BDLFNBQVMsRUFBRTtZQUNULE1BQU0sRUFBRSxXQUFXLENBQUMsVUFBVTtZQUM5QixTQUFTLEVBQUUsYUFBYTtZQUN4QixXQUFXLEVBQUUsQ0FBQztZQUNkLFlBQVksRUFBRSxJQUFJO1NBQ25CO0tBQ0Y7Q0FDRixDQUFDLENBQUE7QUFFRixVQUFVLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDcEI7UUFDRSxTQUFTLEVBQUUsZ0JBQWdCLENBQUMsTUFBTTtRQUNsQyxTQUFTLEVBQUU7WUFDVCxNQUFNLEVBQUUsV0FBVyxDQUFDLFlBQVk7WUFDaEMsU0FBUyxFQUFFLGNBQWM7WUFDekIsV0FBVyxFQUFFLENBQUM7WUFDZCxZQUFZLEVBQUUsSUFBSTtTQUNuQjtLQUNGO0NBQ0YsQ0FBQyxDQUFBO0FBRUYsVUFBVSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3BCO1FBQ0UsU0FBUyxFQUFFLGdCQUFnQixDQUFDLGVBQWU7UUFDM0MsU0FBUyxFQUFFO1lBQ1QsTUFBTSxFQUFFLFdBQVcsQ0FBQyxNQUFNO1lBQzFCLFNBQVMsRUFBRSxnQkFBZ0I7WUFDM0IsV0FBVyxFQUFFLFFBQVE7WUFDckIsWUFBWSxFQUFFLElBQUk7U0FDbkI7S0FDRjtDQUNGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8vIEN1YmUgZmFjdG9yeVxuZnVuY3Rpb24gY3JlYXRlQ3ViZShcbiAgeDogbnVtYmVyLFxuICB5OiBudW1iZXIsXG4gIHo6IG51bWJlcixcbiAgcG9pbnRlckV2ZW50czogUEJQb2ludGVySG92ZXJGZWVkYmFja19FbnRyeVtdXG4pOiBFbnRpdHkge1xuICBjb25zdCBtZXNoRW50aXR5ID0gZW5naW5lLmFkZEVudGl0eSgpXG4gIFRyYW5zZm9ybS5jcmVhdGUobWVzaEVudGl0eSwgeyBwb3NpdGlvbjogeyB4LCB5LCB6IH0gfSlcbiAgTWVzaFJlbmRlcmVyLmNyZWF0ZShtZXNoRW50aXR5LCB7IG1lc2g6IHsgJGNhc2U6ICdib3gnLCBib3g6IHsgdXZzOiBbXSB9IH0gfSlcbiAgTWVzaENvbGxpZGVyLmNyZWF0ZShtZXNoRW50aXR5LCB7IG1lc2g6IHsgJGNhc2U6ICdib3gnLCBib3g6IHt9IH0gfSlcbiAgUG9pbnRlckhvdmVyRmVlZGJhY2suY3JlYXRlKG1lc2hFbnRpdHksIHsgcG9pbnRlckV2ZW50cyB9KVxuICByZXR1cm4gbWVzaEVudGl0eVxufVxuXG5jcmVhdGVDdWJlKDE1LCAxLCAxNSwgW1xuICB7XG4gICAgZXZlbnRUeXBlOiBQb2ludGVyRXZlbnRUeXBlLlBFVF9ET1dOLFxuICAgIGV2ZW50SW5mbzoge1xuICAgICAgYnV0dG9uOiBJbnB1dEFjdGlvbi5JQV9QUklNQVJZLFxuICAgICAgaG92ZXJUZXh0OiAnUHJpbWFyeURvd24nLFxuICAgICAgbWF4RGlzdGFuY2U6IDUsXG4gICAgICBzaG93RmVlZGJhY2s6IHRydWVcbiAgICB9XG4gIH1cbl0pXG5cbmNyZWF0ZUN1YmUoMTMsIDEsIDE1LCBbXG4gIHtcbiAgICBldmVudFR5cGU6IFBvaW50ZXJFdmVudFR5cGUuUEVUX1VQLFxuICAgIGV2ZW50SW5mbzoge1xuICAgICAgYnV0dG9uOiBJbnB1dEFjdGlvbi5JQV9TRUNPTkRBUlksXG4gICAgICBob3ZlclRleHQ6ICdTZWNvbmRhcnkgVXAnLFxuICAgICAgbWF4RGlzdGFuY2U6IDUsXG4gICAgICBzaG93RmVlZGJhY2s6IHRydWVcbiAgICB9XG4gIH1cbl0pXG5cbmNyZWF0ZUN1YmUoMTEsIDEsIDE1LCBbXG4gIHtcbiAgICBldmVudFR5cGU6IFBvaW50ZXJFdmVudFR5cGUuUEVUX0hPVkVSX0VOVEVSLFxuICAgIGV2ZW50SW5mbzoge1xuICAgICAgYnV0dG9uOiBJbnB1dEFjdGlvbi5JQV9BTlksXG4gICAgICBob3ZlclRleHQ6ICdJbmZpbml0eSBIb3ZlcicsXG4gICAgICBtYXhEaXN0YW5jZTogMTAwMDAwMDAsXG4gICAgICBzaG93RmVlZGJhY2s6IHRydWVcbiAgICB9XG4gIH1cbl0pXG4iXX0=