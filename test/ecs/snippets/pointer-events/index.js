import { engine, Transform, MeshRenderer, MeshCollider, PointerHoverFeedback } from '@dcl/sdk/ecs';
function createCube(x, y, z, pointerEvents) {
    const meshEntity = engine.addEntity();
    Transform.create(meshEntity, { position: { x, y, z } });
    MeshRenderer.create(meshEntity, { mesh: { $case: 'box', box: { uvs: [] } } });
    MeshCollider.create(meshEntity, { mesh: { $case: 'box', box: {} } });
    PointerHoverFeedback.create(meshEntity, { pointerEvents });
    return meshEntity;
}
createCube(15, 1, 15, [
    {
        eventType: 1,
        eventInfo: {
            button: 1,
            hoverText: 'PrimaryDown',
            maxDistance: 5,
            showFeedback: true
        }
    }
]);
createCube(13, 1, 15, [
    {
        eventType: 0,
        eventInfo: {
            button: 2,
            hoverText: 'Secondary Up',
            maxDistance: 5,
            showFeedback: true
        }
    }
]);
createCube(11, 1, 15, [
    {
        eventType: 2,
        eventInfo: {
            button: 3,
            hoverText: 'Infinity Hover',
            maxDistance: 10000000,
            showFeedback: true
        }
    }
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBRUwsTUFBTSxFQUNOLFNBQVMsRUFDVCxZQUFZLEVBQ1osWUFBWSxFQUdaLG9CQUFvQixFQUVyQixNQUFNLGNBQWMsQ0FBQTtBQUdyQixTQUFTLFVBQVUsQ0FDakIsQ0FBUyxFQUNULENBQVMsRUFDVCxDQUFTLEVBQ1QsYUFBNkM7SUFFN0MsTUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFBO0lBQ3JDLFNBQVMsQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUE7SUFDdkQsWUFBWSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUM3RSxZQUFZLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUNwRSxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLEVBQUUsYUFBYSxFQUFFLENBQUMsQ0FBQTtJQUMxRCxPQUFPLFVBQVUsQ0FBQTtBQUNuQixDQUFDO0FBRUQsVUFBVSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3BCO1FBQ0UsU0FBUyxHQUEyQjtRQUNwQyxTQUFTLEVBQUU7WUFDVCxNQUFNLEdBQXdCO1lBQzlCLFNBQVMsRUFBRSxhQUFhO1lBQ3hCLFdBQVcsRUFBRSxDQUFDO1lBQ2QsWUFBWSxFQUFFLElBQUk7U0FDbkI7S0FDRjtDQUNGLENBQUMsQ0FBQTtBQUVGLFVBQVUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNwQjtRQUNFLFNBQVMsR0FBeUI7UUFDbEMsU0FBUyxFQUFFO1lBQ1QsTUFBTSxHQUEwQjtZQUNoQyxTQUFTLEVBQUUsY0FBYztZQUN6QixXQUFXLEVBQUUsQ0FBQztZQUNkLFlBQVksRUFBRSxJQUFJO1NBQ25CO0tBQ0Y7Q0FDRixDQUFDLENBQUE7QUFFRixVQUFVLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDcEI7UUFDRSxTQUFTLEdBQWtDO1FBQzNDLFNBQVMsRUFBRTtZQUNULE1BQU0sR0FBb0I7WUFDMUIsU0FBUyxFQUFFLGdCQUFnQjtZQUMzQixXQUFXLEVBQUUsUUFBUTtZQUNyQixZQUFZLEVBQUUsSUFBSTtTQUNuQjtLQUNGO0NBQ0YsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRW50aXR5LFxuICBlbmdpbmUsXG4gIFRyYW5zZm9ybSxcbiAgTWVzaFJlbmRlcmVyLFxuICBNZXNoQ29sbGlkZXIsXG4gIElucHV0QWN0aW9uLFxuICBQQlBvaW50ZXJIb3ZlckZlZWRiYWNrX0VudHJ5LFxuICBQb2ludGVySG92ZXJGZWVkYmFjayxcbiAgUG9pbnRlckV2ZW50VHlwZVxufSBmcm9tICdAZGNsL3Nkay9lY3MnXG5cbi8vIEN1YmUgZmFjdG9yeVxuZnVuY3Rpb24gY3JlYXRlQ3ViZShcbiAgeDogbnVtYmVyLFxuICB5OiBudW1iZXIsXG4gIHo6IG51bWJlcixcbiAgcG9pbnRlckV2ZW50czogUEJQb2ludGVySG92ZXJGZWVkYmFja19FbnRyeVtdXG4pOiBFbnRpdHkge1xuICBjb25zdCBtZXNoRW50aXR5ID0gZW5naW5lLmFkZEVudGl0eSgpXG4gIFRyYW5zZm9ybS5jcmVhdGUobWVzaEVudGl0eSwgeyBwb3NpdGlvbjogeyB4LCB5LCB6IH0gfSlcbiAgTWVzaFJlbmRlcmVyLmNyZWF0ZShtZXNoRW50aXR5LCB7IG1lc2g6IHsgJGNhc2U6ICdib3gnLCBib3g6IHsgdXZzOiBbXSB9IH0gfSlcbiAgTWVzaENvbGxpZGVyLmNyZWF0ZShtZXNoRW50aXR5LCB7IG1lc2g6IHsgJGNhc2U6ICdib3gnLCBib3g6IHt9IH0gfSlcbiAgUG9pbnRlckhvdmVyRmVlZGJhY2suY3JlYXRlKG1lc2hFbnRpdHksIHsgcG9pbnRlckV2ZW50cyB9KVxuICByZXR1cm4gbWVzaEVudGl0eVxufVxuXG5jcmVhdGVDdWJlKDE1LCAxLCAxNSwgW1xuICB7XG4gICAgZXZlbnRUeXBlOiBQb2ludGVyRXZlbnRUeXBlLlBFVF9ET1dOLFxuICAgIGV2ZW50SW5mbzoge1xuICAgICAgYnV0dG9uOiBJbnB1dEFjdGlvbi5JQV9QUklNQVJZLFxuICAgICAgaG92ZXJUZXh0OiAnUHJpbWFyeURvd24nLFxuICAgICAgbWF4RGlzdGFuY2U6IDUsXG4gICAgICBzaG93RmVlZGJhY2s6IHRydWVcbiAgICB9XG4gIH1cbl0pXG5cbmNyZWF0ZUN1YmUoMTMsIDEsIDE1LCBbXG4gIHtcbiAgICBldmVudFR5cGU6IFBvaW50ZXJFdmVudFR5cGUuUEVUX1VQLFxuICAgIGV2ZW50SW5mbzoge1xuICAgICAgYnV0dG9uOiBJbnB1dEFjdGlvbi5JQV9TRUNPTkRBUlksXG4gICAgICBob3ZlclRleHQ6ICdTZWNvbmRhcnkgVXAnLFxuICAgICAgbWF4RGlzdGFuY2U6IDUsXG4gICAgICBzaG93RmVlZGJhY2s6IHRydWVcbiAgICB9XG4gIH1cbl0pXG5cbmNyZWF0ZUN1YmUoMTEsIDEsIDE1LCBbXG4gIHtcbiAgICBldmVudFR5cGU6IFBvaW50ZXJFdmVudFR5cGUuUEVUX0hPVkVSX0VOVEVSLFxuICAgIGV2ZW50SW5mbzoge1xuICAgICAgYnV0dG9uOiBJbnB1dEFjdGlvbi5JQV9BTlksXG4gICAgICBob3ZlclRleHQ6ICdJbmZpbml0eSBIb3ZlcicsXG4gICAgICBtYXhEaXN0YW5jZTogMTAwMDAwMDAsXG4gICAgICBzaG93RmVlZGJhY2s6IHRydWVcbiAgICB9XG4gIH1cbl0pXG4iXX0=