import { engine, Transform, MeshRenderer, MeshCollider, EventsSystem, Vector3, Raycast, RaycastResult } from '@dcl/ecs';
function createCube(x, y, z, scaleMultiplier = 1) {
    const cubeEntity = engine.addEntity();
    Transform.create(cubeEntity, {
        position: { x, y, z },
        scale: { x: scaleMultiplier, y: scaleMultiplier, z: scaleMultiplier }
    });
    MeshRenderer.create(cubeEntity, { mesh: { $case: 'box', box: { uvs: [] } } });
    MeshCollider.create(cubeEntity, { mesh: { $case: 'box', box: {} } });
    return cubeEntity;
}
const cubeEntity = createCube(8, 1, 8);
const raycastEntity = engine.addEntity();
EventsSystem.onPointerDown(cubeEntity, () => {
    Raycast.createOrReplace(raycastEntity, {
        origin: Vector3.create(8, 1, 0.1),
        direction: Vector3.create(0, 0, 1),
        maxDistance: 16,
        queryType: 0
    });
}, {
    button: 0,
    hoverText: 'CAST RAY'
});
let lastRaycastTimestamp = -1;
engine.addSystem(() => {
    for (const [_entity, result] of engine.getEntitiesWith(RaycastResult)) {
        if (result.hits?.length === 0 || result.timestamp <= lastRaycastTimestamp)
            continue;
        lastRaycastTimestamp = result.timestamp;
        if (result.hits[0] && result.hits[0].position) {
            createCube(result.hits[0].position.x, result.hits[0].position.y, result.hits[0].position.z, 0.3);
        }
        console.log(`Hits (this should be '1'): '${result.hits.length}'`);
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsTUFBTSxFQUNOLFNBQVMsRUFDVCxZQUFZLEVBQ1osWUFBWSxFQUVaLFlBQVksRUFDWixPQUFPLEVBQ1AsT0FBTyxFQUVQLGFBQWEsRUFDZCxNQUFNLFVBQVUsQ0FBQTtBQUVqQixTQUFTLFVBQVUsQ0FDakIsQ0FBUyxFQUNULENBQVMsRUFDVCxDQUFTLEVBQ1Qsa0JBQTBCLENBQUM7SUFFM0IsTUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFBO0lBRXJDLFNBQVMsQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFO1FBQzNCLFFBQVEsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1FBQ3JCLEtBQUssRUFBRSxFQUFFLENBQUMsRUFBRSxlQUFlLEVBQUUsQ0FBQyxFQUFFLGVBQWUsRUFBRSxDQUFDLEVBQUUsZUFBZSxFQUFFO0tBQ3RFLENBQUMsQ0FBQTtJQUVGLFlBQVksQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUE7SUFDN0UsWUFBWSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUE7SUFFcEUsT0FBTyxVQUFVLENBQUE7QUFDbkIsQ0FBQztBQUdELE1BQU0sVUFBVSxHQUFHLFVBQVUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBO0FBQ3RDLE1BQU0sYUFBYSxHQUFHLE1BQU0sQ0FBQyxTQUFTLEVBQUUsQ0FBQTtBQUd4QyxZQUFZLENBQUMsYUFBYSxDQUN4QixVQUFVLEVBQ1YsR0FBRyxFQUFFO0lBQ0gsT0FBTyxDQUFDLGVBQWUsQ0FBQyxhQUFhLEVBQUU7UUFDckMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUM7UUFDakMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDbEMsV0FBVyxFQUFFLEVBQUU7UUFDZixTQUFTLEdBQWdDO0tBQzFDLENBQUMsQ0FBQTtBQUNKLENBQUMsRUFDRDtJQUNFLE1BQU0sR0FBd0I7SUFDOUIsU0FBUyxFQUFFLFVBQVU7Q0FDdEIsQ0FDRixDQUFBO0FBR0QsSUFBSSxvQkFBb0IsR0FBRyxDQUFDLENBQUMsQ0FBQTtBQUM3QixNQUFNLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRTtJQUNwQixLQUFLLE1BQU0sQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLElBQUksTUFBTSxDQUFDLGVBQWUsQ0FBQyxhQUFhLENBQUMsRUFBRTtRQUNyRSxJQUFJLE1BQU0sQ0FBQyxJQUFJLEVBQUUsTUFBTSxLQUFLLENBQUMsSUFBSSxNQUFNLENBQUMsU0FBUyxJQUFJLG9CQUFvQjtZQUN2RSxTQUFRO1FBQ1Ysb0JBQW9CLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQTtRQUV2QyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUU7WUFDN0MsVUFBVSxDQUNSLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsRUFDekIsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUN6QixNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQ3pCLEdBQUcsQ0FDSixDQUFBO1NBQ0Y7UUFFRCxPQUFPLENBQUMsR0FBRyxDQUFDLCtCQUErQixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUE7S0FDbEU7QUFDSCxDQUFDLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGVuZ2luZSxcbiAgVHJhbnNmb3JtLFxuICBNZXNoUmVuZGVyZXIsXG4gIE1lc2hDb2xsaWRlcixcbiAgSW5wdXRBY3Rpb24sXG4gIEV2ZW50c1N5c3RlbSxcbiAgVmVjdG9yMyxcbiAgUmF5Y2FzdCxcbiAgUmF5Y2FzdFF1ZXJ5VHlwZSxcbiAgUmF5Y2FzdFJlc3VsdFxufSBmcm9tICdAZGNsL2VjcydcblxuZnVuY3Rpb24gY3JlYXRlQ3ViZShcbiAgeDogbnVtYmVyLFxuICB5OiBudW1iZXIsXG4gIHo6IG51bWJlcixcbiAgc2NhbGVNdWx0aXBsaWVyOiBudW1iZXIgPSAxXG4pIHtcbiAgY29uc3QgY3ViZUVudGl0eSA9IGVuZ2luZS5hZGRFbnRpdHkoKVxuXG4gIFRyYW5zZm9ybS5jcmVhdGUoY3ViZUVudGl0eSwge1xuICAgIHBvc2l0aW9uOiB7IHgsIHksIHogfSxcbiAgICBzY2FsZTogeyB4OiBzY2FsZU11bHRpcGxpZXIsIHk6IHNjYWxlTXVsdGlwbGllciwgejogc2NhbGVNdWx0aXBsaWVyIH1cbiAgfSlcblxuICBNZXNoUmVuZGVyZXIuY3JlYXRlKGN1YmVFbnRpdHksIHsgbWVzaDogeyAkY2FzZTogJ2JveCcsIGJveDogeyB1dnM6IFtdIH0gfSB9KVxuICBNZXNoQ29sbGlkZXIuY3JlYXRlKGN1YmVFbnRpdHksIHsgbWVzaDogeyAkY2FzZTogJ2JveCcsIGJveDoge30gfSB9KVxuXG4gIHJldHVybiBjdWJlRW50aXR5XG59XG5cbi8vIENyZWF0ZSBjdWJlIHRvIGhpdFxuY29uc3QgY3ViZUVudGl0eSA9IGNyZWF0ZUN1YmUoOCwgMSwgOClcbmNvbnN0IHJheWNhc3RFbnRpdHkgPSBlbmdpbmUuYWRkRW50aXR5KClcblxuLy8gQWRkIE9uUG9pbnRlckRvd24gY29tcG9uZW50IHRvIGN1YmUgZW50aXR5IHRvIHRyaWdnZXIgcmF5IGNhc3Rpbmcgb24gaW50ZXJhY3Rpb25cbkV2ZW50c1N5c3RlbS5vblBvaW50ZXJEb3duKFxuICBjdWJlRW50aXR5LFxuICAoKSA9PiB7XG4gICAgUmF5Y2FzdC5jcmVhdGVPclJlcGxhY2UocmF5Y2FzdEVudGl0eSwge1xuICAgICAgb3JpZ2luOiBWZWN0b3IzLmNyZWF0ZSg4LCAxLCAwLjEpLFxuICAgICAgZGlyZWN0aW9uOiBWZWN0b3IzLmNyZWF0ZSgwLCAwLCAxKSxcbiAgICAgIG1heERpc3RhbmNlOiAxNixcbiAgICAgIHF1ZXJ5VHlwZTogUmF5Y2FzdFF1ZXJ5VHlwZS5SUVRfSElUX0ZJUlNUXG4gICAgfSlcbiAgfSxcbiAge1xuICAgIGJ1dHRvbjogSW5wdXRBY3Rpb24uSUFfUE9JTlRFUixcbiAgICBob3ZlclRleHQ6ICdDQVNUIFJBWSdcbiAgfVxuKVxuXG4vLyBTeXN0ZW0gdG8gZGV0ZWN0IG5ldyByYXljYXN0IHJlc3BvbnNlcyBhbmQgaW5zdGFudGlhdGUgYSBjdWJlIHdoZXJlIHRoZSByYXkgaGl0c1xubGV0IGxhc3RSYXljYXN0VGltZXN0YW1wID0gLTFcbmVuZ2luZS5hZGRTeXN0ZW0oKCkgPT4ge1xuICBmb3IgKGNvbnN0IFtfZW50aXR5LCByZXN1bHRdIG9mIGVuZ2luZS5nZXRFbnRpdGllc1dpdGgoUmF5Y2FzdFJlc3VsdCkpIHtcbiAgICBpZiAocmVzdWx0LmhpdHM/Lmxlbmd0aCA9PT0gMCB8fCByZXN1bHQudGltZXN0YW1wIDw9IGxhc3RSYXljYXN0VGltZXN0YW1wKVxuICAgICAgY29udGludWVcbiAgICBsYXN0UmF5Y2FzdFRpbWVzdGFtcCA9IHJlc3VsdC50aW1lc3RhbXBcblxuICAgIGlmIChyZXN1bHQuaGl0c1swXSAmJiByZXN1bHQuaGl0c1swXS5wb3NpdGlvbikge1xuICAgICAgY3JlYXRlQ3ViZShcbiAgICAgICAgcmVzdWx0LmhpdHNbMF0ucG9zaXRpb24ueCxcbiAgICAgICAgcmVzdWx0LmhpdHNbMF0ucG9zaXRpb24ueSxcbiAgICAgICAgcmVzdWx0LmhpdHNbMF0ucG9zaXRpb24ueixcbiAgICAgICAgMC4zXG4gICAgICApXG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coYEhpdHMgKHRoaXMgc2hvdWxkIGJlICcxJyk6ICcke3Jlc3VsdC5oaXRzLmxlbmd0aH0nYClcbiAgfVxufSlcblxuZXhwb3J0IHt9XG4iXX0=