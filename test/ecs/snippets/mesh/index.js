import { engine, Transform, MeshRenderer, MeshCollider } from '@dcl/ecs';
var Mesh;
(function (Mesh) {
    Mesh[Mesh["BOX"] = 0] = "BOX";
    Mesh[Mesh["CYLINDER"] = 1] = "CYLINDER";
    Mesh[Mesh["SPHERE"] = 2] = "SPHERE";
    Mesh[Mesh["CONE"] = 3] = "CONE";
})(Mesh || (Mesh = {}));
function createMesh(x, y, z, mesh, withCollider = false) {
    const meshEntity = engine.addEntity();
    Transform.create(meshEntity, { position: { x, y, z } });
    switch (mesh) {
        case Mesh.BOX:
            MeshRenderer.create(meshEntity, {
                mesh: { $case: 'box', box: { uvs: [] } }
            });
            if (withCollider)
                MeshCollider.create(meshEntity, { mesh: { $case: 'box', box: {} } });
            break;
        case Mesh.SPHERE:
            MeshRenderer.create(meshEntity, { mesh: { $case: 'sphere', sphere: {} } });
            if (withCollider)
                MeshCollider.create(meshEntity, {
                    mesh: { $case: 'sphere', sphere: {} }
                });
            break;
        case Mesh.CONE:
        case Mesh.CYLINDER:
            MeshRenderer.create(meshEntity, {
                mesh: {
                    $case: 'cylinder',
                    cylinder: {
                        radiusBottom: 1,
                        radiusTop: mesh === Mesh.CONE ? 0 : 1
                    }
                }
            });
            if (withCollider)
                MeshCollider.create(meshEntity, {
                    mesh: {
                        $case: 'cylinder',
                        cylinder: {
                            radiusBottom: 1,
                            radiusTop: mesh === Mesh.CONE ? 0 : 1
                        }
                    }
                });
            break;
    }
    return meshEntity;
}
createMesh(15, 1, 15, Mesh.BOX);
createMesh(12, 1, 15, Mesh.CONE);
createMesh(9, 1, 15, Mesh.SPHERE);
createMesh(6, 1, 15, Mesh.CYLINDER);
createMesh(15, 1, 1, Mesh.BOX, true);
createMesh(12, 1, 1, Mesh.CONE, true);
createMesh(9, 1, 1, Mesh.SPHERE, true);
createMesh(6, 1, 1, Mesh.CYLINDER, true);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLE1BQU0sVUFBVSxDQUFBO0FBRXhFLElBQUssSUFLSjtBQUxELFdBQUssSUFBSTtJQUNQLDZCQUFHLENBQUE7SUFDSCx1Q0FBUSxDQUFBO0lBQ1IsbUNBQU0sQ0FBQTtJQUNOLCtCQUFJLENBQUE7QUFDTixDQUFDLEVBTEksSUFBSSxLQUFKLElBQUksUUFLUjtBQUVELFNBQVMsVUFBVSxDQUNqQixDQUFTLEVBQ1QsQ0FBUyxFQUNULENBQVMsRUFDVCxJQUFVLEVBQ1YsZUFBd0IsS0FBSztJQUU3QixNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsU0FBUyxFQUFFLENBQUE7SUFDckMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUV2RCxRQUFRLElBQUksRUFBRTtRQUNaLEtBQUssSUFBSSxDQUFDLEdBQUc7WUFDWCxZQUFZLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRTtnQkFDOUIsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUU7YUFDekMsQ0FBQyxDQUFBO1lBQ0YsSUFBSSxZQUFZO2dCQUNkLFlBQVksQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFBO1lBQ3RFLE1BQUs7UUFDUCxLQUFLLElBQUksQ0FBQyxNQUFNO1lBQ2QsWUFBWSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUE7WUFDMUUsSUFBSSxZQUFZO2dCQUNkLFlBQVksQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFO29CQUM5QixJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUU7aUJBQ3RDLENBQUMsQ0FBQTtZQUNKLE1BQUs7UUFDUCxLQUFLLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDZixLQUFLLElBQUksQ0FBQyxRQUFRO1lBQ2hCLFlBQVksQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFO2dCQUM5QixJQUFJLEVBQUU7b0JBQ0osS0FBSyxFQUFFLFVBQVU7b0JBQ2pCLFFBQVEsRUFBRTt3QkFDUixZQUFZLEVBQUUsQ0FBQzt3QkFDZixTQUFTLEVBQUUsSUFBSSxLQUFLLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztxQkFDdEM7aUJBQ0Y7YUFDRixDQUFDLENBQUE7WUFDRixJQUFJLFlBQVk7Z0JBQ2QsWUFBWSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUU7b0JBQzlCLElBQUksRUFBRTt3QkFDSixLQUFLLEVBQUUsVUFBVTt3QkFDakIsUUFBUSxFQUFFOzRCQUNSLFlBQVksRUFBRSxDQUFDOzRCQUNmLFNBQVMsRUFBRSxJQUFJLEtBQUssSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO3lCQUN0QztxQkFDRjtpQkFDRixDQUFDLENBQUE7WUFDSixNQUFLO0tBQ1I7SUFDRCxPQUFPLFVBQVUsQ0FBQTtBQUNuQixDQUFDO0FBRUQsVUFBVSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtBQUMvQixVQUFVLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO0FBQ2hDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7QUFDakMsVUFBVSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQTtBQUNuQyxVQUFVLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQTtBQUNwQyxVQUFVLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQTtBQUNyQyxVQUFVLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQTtBQUN0QyxVQUFVLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVuZ2luZSwgVHJhbnNmb3JtLCBNZXNoUmVuZGVyZXIsIE1lc2hDb2xsaWRlciB9IGZyb20gJ0BkY2wvZWNzJ1xuXG5lbnVtIE1lc2gge1xuICBCT1gsXG4gIENZTElOREVSLFxuICBTUEhFUkUsXG4gIENPTkVcbn1cblxuZnVuY3Rpb24gY3JlYXRlTWVzaChcbiAgeDogbnVtYmVyLFxuICB5OiBudW1iZXIsXG4gIHo6IG51bWJlcixcbiAgbWVzaDogTWVzaCxcbiAgd2l0aENvbGxpZGVyOiBib29sZWFuID0gZmFsc2Vcbikge1xuICBjb25zdCBtZXNoRW50aXR5ID0gZW5naW5lLmFkZEVudGl0eSgpXG4gIFRyYW5zZm9ybS5jcmVhdGUobWVzaEVudGl0eSwgeyBwb3NpdGlvbjogeyB4LCB5LCB6IH0gfSlcblxuICBzd2l0Y2ggKG1lc2gpIHtcbiAgICBjYXNlIE1lc2guQk9YOlxuICAgICAgTWVzaFJlbmRlcmVyLmNyZWF0ZShtZXNoRW50aXR5LCB7XG4gICAgICAgIG1lc2g6IHsgJGNhc2U6ICdib3gnLCBib3g6IHsgdXZzOiBbXSB9IH1cbiAgICAgIH0pXG4gICAgICBpZiAod2l0aENvbGxpZGVyKVxuICAgICAgICBNZXNoQ29sbGlkZXIuY3JlYXRlKG1lc2hFbnRpdHksIHsgbWVzaDogeyAkY2FzZTogJ2JveCcsIGJveDoge30gfSB9KVxuICAgICAgYnJlYWtcbiAgICBjYXNlIE1lc2guU1BIRVJFOlxuICAgICAgTWVzaFJlbmRlcmVyLmNyZWF0ZShtZXNoRW50aXR5LCB7IG1lc2g6IHsgJGNhc2U6ICdzcGhlcmUnLCBzcGhlcmU6IHt9IH0gfSlcbiAgICAgIGlmICh3aXRoQ29sbGlkZXIpXG4gICAgICAgIE1lc2hDb2xsaWRlci5jcmVhdGUobWVzaEVudGl0eSwge1xuICAgICAgICAgIG1lc2g6IHsgJGNhc2U6ICdzcGhlcmUnLCBzcGhlcmU6IHt9IH1cbiAgICAgICAgfSlcbiAgICAgIGJyZWFrXG4gICAgY2FzZSBNZXNoLkNPTkU6XG4gICAgY2FzZSBNZXNoLkNZTElOREVSOlxuICAgICAgTWVzaFJlbmRlcmVyLmNyZWF0ZShtZXNoRW50aXR5LCB7XG4gICAgICAgIG1lc2g6IHtcbiAgICAgICAgICAkY2FzZTogJ2N5bGluZGVyJyxcbiAgICAgICAgICBjeWxpbmRlcjoge1xuICAgICAgICAgICAgcmFkaXVzQm90dG9tOiAxLFxuICAgICAgICAgICAgcmFkaXVzVG9wOiBtZXNoID09PSBNZXNoLkNPTkUgPyAwIDogMVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIGlmICh3aXRoQ29sbGlkZXIpXG4gICAgICAgIE1lc2hDb2xsaWRlci5jcmVhdGUobWVzaEVudGl0eSwge1xuICAgICAgICAgIG1lc2g6IHtcbiAgICAgICAgICAgICRjYXNlOiAnY3lsaW5kZXInLFxuICAgICAgICAgICAgY3lsaW5kZXI6IHtcbiAgICAgICAgICAgICAgcmFkaXVzQm90dG9tOiAxLFxuICAgICAgICAgICAgICByYWRpdXNUb3A6IG1lc2ggPT09IE1lc2guQ09ORSA/IDAgOiAxXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgYnJlYWtcbiAgfVxuICByZXR1cm4gbWVzaEVudGl0eVxufVxuXG5jcmVhdGVNZXNoKDE1LCAxLCAxNSwgTWVzaC5CT1gpXG5jcmVhdGVNZXNoKDEyLCAxLCAxNSwgTWVzaC5DT05FKVxuY3JlYXRlTWVzaCg5LCAxLCAxNSwgTWVzaC5TUEhFUkUpXG5jcmVhdGVNZXNoKDYsIDEsIDE1LCBNZXNoLkNZTElOREVSKVxuY3JlYXRlTWVzaCgxNSwgMSwgMSwgTWVzaC5CT1gsIHRydWUpXG5jcmVhdGVNZXNoKDEyLCAxLCAxLCBNZXNoLkNPTkUsIHRydWUpXG5jcmVhdGVNZXNoKDksIDEsIDEsIE1lc2guU1BIRVJFLCB0cnVlKVxuY3JlYXRlTWVzaCg2LCAxLCAxLCBNZXNoLkNZTElOREVSLCB0cnVlKVxuXG5leHBvcnQge31cbiJdfQ==