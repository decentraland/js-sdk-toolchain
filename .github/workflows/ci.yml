on:
  push:
    branches:
      - main
  pull_request:
  release:
    types:
      - created

name: CI
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: install npm v8
        run: npm i -g npm@8
      - name: install
        run: make install
      - name: lint
        run: make lint
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: install npm v8
        run: npm i -g npm@8
      - name: install
        run: make install
      - name: build
        run: make build
      - name: test
        run: make test-coverage
      - name: test-cli
        run: make test-cli
      - uses: codecov/codecov-action@v3
        if: always()
        with:
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
      - name: prepare releasable packages
        run: make prepare
  build:
    runs-on: ubuntu-latest
    outputs:
      decentraland_sdk_s3_bucket_key: ${{ steps.publish_decentraland_sdk.outputs.s3-bucket-key }}
      decentraland_inspector_s3_bucket_key: ${{ steps.publish_decentraland_inspector.outputs.s3-bucket-key }}
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: install npm v8
        run: npm i -g npm@8
      - name: install
        run: make install
      - name: update version of packages/@dcl/dcl-rollup
        uses: menduz/oddish-action@master
        with:
          cwd: packages/@dcl/dcl-rollup
          deterministic-snapshot: true
          only-update-versions: true
      - name: update version of packages/@dcl/crdt
        uses: menduz/oddish-action@master
        with:
          cwd: packages/@dcl/crdt
          deterministic-snapshot: true
          only-update-versions: true
      - name: update version of packages/@dcl/js-runtime
        uses: menduz/oddish-action@master
        with:
          cwd: packages/@dcl/js-runtime
          deterministic-snapshot: true
          only-update-versions: true
      - name: update version of packages/@dcl/ecs
        uses: menduz/oddish-action@master
        with:
          cwd: packages/@dcl/ecs
          deterministic-snapshot: true
          only-update-versions: true
      - name: update version of packages/@dcl/react-ecs
        uses: menduz/oddish-action@master
        with:
          cwd: packages/@dcl/react-ecs
          deterministic-snapshot: true
          only-update-versions: true
      - name: update version of packages/@dcl/sdk
        uses: menduz/oddish-action@master
        with:
          cwd: packages/@dcl/sdk
          deterministic-snapshot: true
          only-update-versions: true
      - name: update version of packages/@dcl/inspector
        uses: menduz/oddish-action@master
        with:
          cwd: packages/@dcl/inspector
          deterministic-snapshot: true
          only-update-versions: true
      - name: update version of packages/@dcl/playground-assets
        uses: menduz/oddish-action@master
        with:
          cwd: packages/@dcl/playground-assets
          deterministic-snapshot: true
          only-update-versions: true
      - name: build
        run: make build
      - name: prepare releasable packages
        run: make prepare
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: built-artifacts
          path: 'packages/**/*.tgz'
          retention-days: 5
      - name: publish @dcl/dcl-rollup package
        uses: menduz/oddish-action@master
        id: publish_dcl_rollup
        with:
          registry-url: 'https://registry.npmjs.org'
          access: public
          cwd: ./packages/@dcl/dcl-rollup
          ## use action runId instead of current date to generate snapshot numbers
          deterministic-snapshot: true

          ## publish every package to s3
          s3-bucket: ${{ secrets.SDK_TEAM_S3_BUCKET }}
          s3-bucket-key-prefix: '@dcl/js-sdk-toolchain/branch/${{ github.head_ref || github.ref }}/@dcl/dcl-rollup'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.SDK_TEAM_AWS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SDK_TEAM_AWS_SECRET }}
      - name: publish @dcl/crdt package
        uses: menduz/oddish-action@master
        id: publish_crdt
        with:
          registry-url: 'https://registry.npmjs.org'
          access: public
          cwd: ./packages/@dcl/crdt
          ## use action runId instead of current date to generate snapshot numbers
          deterministic-snapshot: true

          ## publish every package to s3
          s3-bucket: ${{ secrets.SDK_TEAM_S3_BUCKET }}
          s3-bucket-key-prefix: '@dcl/js-sdk-toolchain/branch/${{ github.head_ref || github.ref }}/@dcl/dcl-crdt'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.SDK_TEAM_AWS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SDK_TEAM_AWS_SECRET }}
      - name: publish @dcl/ecs package
        uses: menduz/oddish-action@master
        id: publish_ecs
        with:
          registry-url: 'https://registry.npmjs.org'
          access: public
          cwd: ./packages/@dcl/ecs
          ## use action runId instead of current date to generate snapshot numbers
          deterministic-snapshot: true

          ## publish every package to s3
          s3-bucket: ${{ secrets.SDK_TEAM_S3_BUCKET }}
          s3-bucket-key-prefix: '@dcl/js-sdk-toolchain/branch/${{ github.head_ref || github.ref }}/@dcl/ecs'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.SDK_TEAM_AWS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SDK_TEAM_AWS_SECRET }}
      - name: publish @dcl/js-runtime package
        id: publish_dcl_js_runtime
        uses: menduz/oddish-action@master
        with:
          registry-url: 'https://registry.npmjs.org'
          access: public
          cwd: ./packages/@dcl/js-runtime
          ## use action runId instead of current date to generate snapshot numbers
          deterministic-snapshot: true

          ## publish every package to s3
          s3-bucket: ${{ secrets.SDK_TEAM_S3_BUCKET }}
          s3-bucket-key-prefix: '@dcl/js-sdk-toolchain/branch/${{ github.head_ref || github.ref }}/@dcl/js-runtime'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.SDK_TEAM_AWS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SDK_TEAM_AWS_SECRET }}
      - name: publish @dcl/react-ecs package
        id: publish_dcl_react_ecs
        uses: menduz/oddish-action@master
        with:
          registry-url: 'https://registry.npmjs.org'
          access: public
          cwd: ./packages/@dcl/react-ecs
          ## use action runId instead of current date to generate snapshot numbers
          deterministic-snapshot: true

          ## publish every package to s3
          s3-bucket: ${{ secrets.SDK_TEAM_S3_BUCKET }}
          s3-bucket-key-prefix: '@dcl/js-sdk-toolchain/branch/${{ github.head_ref || github.ref }}/@dcl/react-ecs'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.SDK_TEAM_AWS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SDK_TEAM_AWS_SECRET }}
      - name: (PR) change @dcl/ecs version to s3 url
        working-directory: ./packages/@dcl/sdk
        if: ${{ github.event.pull_request.number }}
        run: node -e "let pkg=require('./package.json'); pkg.dependencies['@dcl/crdt']='$CRDT_S3_URL'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));"
        env:
          CRDT_S3_URL: ${{ secrets.SDK_TEAM_S3_BASE_URL }}/${{ steps.publish_crdt.outputs.s3-bucket-key }}
      - name: (PR) change @dcl/sdk version to s3 url
        working-directory: ./packages/@dcl/sdk
        if: ${{ github.event.pull_request.number }}
        run: node -e "let pkg=require('./package.json'); pkg.dependencies['@dcl/js-runtime']='$JS_RUNTIME_S3_URL'; pkg.dependencies['@dcl/dcl-rollup']='$ROLLUP_S3_URL'; pkg.dependencies['@dcl/ecs']='$ECS_S3_URL'; pkg.dependencies['@dcl/react-ecs']='$REACT_ECS_S3_URL'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));"
        env:
          REACT_ECS_S3_URL: ${{ secrets.SDK_TEAM_S3_BASE_URL }}/${{ steps.publish_dcl_react_ecs.outputs.s3-bucket-key }}
          ECS_S3_URL: ${{ secrets.SDK_TEAM_S3_BASE_URL }}/${{ steps.publish_ecs.outputs.s3-bucket-key }}
          ROLLUP_S3_URL: ${{ secrets.SDK_TEAM_S3_BASE_URL }}/${{ steps.publish_dcl_rollup.outputs.s3-bucket-key }}
          JS_RUNTIME_S3_URL: ${{ secrets.SDK_TEAM_S3_BASE_URL }}/${{ steps.publish_dcl_js_runtime.outputs.s3-bucket-key }}
      - name: (PR) change @dcl/inspector version to s3 url
        working-directory: ./packages/@dcl/inspector
        if: ${{ github.event.pull_request.number }}
        run: node -e "let pkg=require('./package.json'); require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));"
      - name: playground upload to s3
        run: npx @dcl/cdn-uploader@next --bucket ${{ secrets.SDK_TEAM_S3_BUCKET }} --local-folder $(pwd)/packages/@dcl/playground-assets/dist --bucket-folder '@dcl/js-sdk-toolchain/branch/${{ github.head_ref || github.ref }}/playground-assets'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SDK_TEAM_AWS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SDK_TEAM_AWS_SECRET }}
      - name: publish @dcl/sdk package
        uses: menduz/oddish-action@master
        id: publish_decentraland_sdk
        with:
          registry-url: 'https://registry.npmjs.org'
          access: public
          cwd: ./packages/@dcl/sdk
          ## use action runId instead of current date to generate snapshot numbers
          deterministic-snapshot: true

          ## publish every package to s3
          s3-bucket: ${{ secrets.SDK_TEAM_S3_BUCKET }}
          s3-bucket-key-prefix: '@dcl/js-sdk-toolchain/branch/${{ github.head_ref || github.ref }}'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.SDK_TEAM_AWS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SDK_TEAM_AWS_SECRET }}
      - name: publish @dcl/inspector package
        uses: menduz/oddish-action@master
        id: publish_decentraland_inspector
        with:
          registry-url: 'https://registry.npmjs.org'
          access: public
          cwd: ./packages/@dcl/inspector
          ## use action runId instead of current date to generate snapshot numbers
          deterministic-snapshot: true

          ## publish every package to s3
          s3-bucket: ${{ secrets.SDK_TEAM_S3_BUCKET }}
          s3-bucket-key-prefix: '@dcl/js-sdk-toolchain/branch/${{ github.head_ref || github.ref }}/@dcl/inspector'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.SDK_TEAM_AWS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SDK_TEAM_AWS_SECRET }}
      - name: publish @dcl/playground-assets package
        uses: menduz/oddish-action@master
        id: publish_playground_assets
        with:
          registry-url: 'https://registry.npmjs.org'
          access: public
          cwd: ./packages/@dcl/playground-assets
          ## use action runId instead of current date to generate snapshot numbers
          deterministic-snapshot: true

          ## publish every package to s3
          s3-bucket: ${{ secrets.SDK_TEAM_S3_BUCKET }}
          s3-bucket-key-prefix: '@dcl/js-sdk-toolchain/branch/${{ github.head_ref || github.ref }}'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.SDK_TEAM_AWS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SDK_TEAM_AWS_SECRET }}
  notify_deployment:
    needs: [build]
    if: ${{ github.event.pull_request.number }}
    runs-on: ubuntu-latest
    name: Deployment Notification
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Test this pull request
      - name: Generate SDK S3 URL
        id: sdk-url-generator
        run: |
          body=$(echo ${{ secrets.SDK_TEAM_S3_BASE_URL }})/${{ needs.build.outputs.decentraland_sdk_s3_bucket_key }}
          echo ::set-output name=body::$body
      - name: Generate Inspector S3 URL
        id: inspector-url-generator
        run: |
          body=$(echo ${{ secrets.SDK_TEAM_S3_BASE_URL }})/${{ needs.build.outputs.decentraland_inspector_s3_bucket_key }}
          echo ::set-output name=body::$body
      - name: Test SDK Install S3 URL
        run: mkdir -p test_sdk_s3 && cd test_sdk_s3 && npm init --yes && npm install "${{ steps.sdk-url-generator.outputs.body }}"
      - name: Test Inspector Install S3 URL
        run: mkdir -p test_inspector_s3 && cd test_inspector_s3 && npm init --yes && npm install "${{ steps.inspector-url-generator.outputs.body }}"
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            # Test this pull request
            - The `@dcl/sdk` package can be tested in scenes by running
               ```bash
               npm install "${{ steps.sdk-url-generator.outputs.body }}"
               ```

            - The `@dcl/inspector` package can be tested by running
               ```bash
               npm install "${{ steps.inspector-url-generator.outputs.body }}"
               ```
            - You can preview this build entering:
              https://playground.decentraland.org/?sdk-branch=${{ github.head_ref || github.ref }}
          edit-mode: replace
  cli-e2e:
    needs: [build]
    runs-on: ubuntu-latest
    name: CLI E2E
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: install npm v8
        run: npm i -g npm@8
      - run: mkdir -p scene
      - name: npx @dcl/sdk init
        run: npx ${{ secrets.SDK_TEAM_S3_BASE_URL }}/${{ needs.build.outputs.decentraland_sdk_s3_bucket_key }} init
        working-directory: scene
      - name: check @dcl/sdk is installed by default
        run: npm ls @dcl/sdk
        working-directory: scene
      - name: install CI version of @dcl/sdk
        run: npm install ${{ secrets.SDK_TEAM_S3_BASE_URL }}/${{ needs.build.outputs.decentraland_sdk_s3_bucket_key }}
        working-directory: scene
      - name: npm run build
        run: npm run build
        working-directory: scene
