on:
  push:
  pull_request:
  release:
    types:
      - created

name: CI
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: install
        run: make install
      - name: update version of packages/@dcl/dcl-rollup
        uses: menduz/oddish-action@staging
        with:
          cwd: packages/@dcl/dcl-rollup
          deterministic-snapshot: true
          only-update-versions: true
      - name: update version of packages/@dcl/build-ecs
        uses: menduz/oddish-action@staging
        with:
          cwd: packages/@dcl/build-ecs
          deterministic-snapshot: true
          only-update-versions: true
      - name: update version of packages/@dcl/amd
        uses: menduz/oddish-action@staging
        with:
          cwd: packages/@dcl/amd
          deterministic-snapshot: true
          only-update-versions: true
      - name: update version of packages/decentraland-ecs
        uses: menduz/oddish-action@staging
        with:
          cwd: packages/decentraland-ecs
          deterministic-snapshot: true
          only-update-versions: true
      - name: build
        run: make build
      - name: test
        run: make test
      - name: prepare releasable packages
        run: make prepare
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: built-artifacts
          path: "packages/**/*.tgz"
          retention-days: 5
      - name: publish @dcl/dcl-rollup package
        uses: menduz/oddish-action@master
        with:
          registry-url: "https://registry.npmjs.org"
          access: public
          cwd: ./packages/@dcl/dcl-rollup
          ## use action runId instead of current date to generate snapshot numbers
          deterministic-snapshot: true

          ## publish every package to s3
          s3-bucket: ${{ secrets.CDN_BUCKET }}
          s3-bucket-key-prefix: "@dcl/js-sdk-toolchain-wip/branch/${{ github.head_ref }}/@dcl/dcl-rollup"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: publish @dcl/amd package
        uses: menduz/oddish-action@master
        with:
          registry-url: "https://registry.npmjs.org"
          access: public
          cwd: ./packages/@dcl/amd
          ## use action runId instead of current date to generate snapshot numbers
          deterministic-snapshot: true

          ## publish every package to s3
          s3-bucket: ${{ secrets.CDN_BUCKET }}
          s3-bucket-key-prefix: "@dcl/js-sdk-toolchain-wip/branch/${{ github.head_ref }}/@dcl/amd"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: publish @dcl/build-ecs package
        uses: menduz/oddish-action@master
        with:
          registry-url: "https://registry.npmjs.org"
          access: public
          cwd: ./packages/@dcl/build-ecs
          ## use action runId instead of current date to generate snapshot numbers
          deterministic-snapshot: true

          ## publish every package to s3
          s3-bucket: ${{ secrets.CDN_BUCKET }}
          s3-bucket-key-prefix: "@dcl/js-sdk-toolchain-wip/branch/${{ github.head_ref }}/@dcl/build-ecs"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: temporary rename decentraland-ecs package to publish
        working-directory: ./packages/decentraland-ecs
        run: node -e "let pkg=require('./package.json'); pkg.name='decentraland-ecs-wip'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));"
      - name: print modified decentraland-ecs/package.json
        working-directory: ./packages/decentraland-ecs
        run: cat package.json
      - name: publish decentraland-ecs package
        uses: menduz/oddish-action@master
        with:
          registry-url: "https://registry.npmjs.org"
          access: public
          cwd: ./packages/decentraland-ecs
          ## use action runId instead of current date to generate snapshot numbers
          deterministic-snapshot: true

          ## publish every package to s3
          s3-bucket: ${{ secrets.CDN_BUCKET }}
          s3-bucket-key-prefix: "@dcl/js-sdk-toolchain-wip/branch/${{ github.head_ref }}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  local-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: install
        run: make install
      - name: build
        run: make build
      - name: prepare local decentraland-ecs package
        run: make prepare-pr 
      - name: 'Upload Local decentraland-ecs'
        uses: actions/upload-artifact@v2
        with:
          name: local-decentraland-ecs
          path: "packages/decentraland-ecs/local-decentraland-ecs.tgz"
          retention-days: 5